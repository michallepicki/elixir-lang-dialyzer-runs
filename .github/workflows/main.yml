name: dialyzer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      repository:
        description: 'elixir source repo to check out when running the action manually'
        required: false
        default: 'michallepicki/elixir'
      ref:
        description: 'elixir source ref to check out when running the action manually'
        required: false
        default: 'patch-1'

jobs:
  dialyze:
    runs-on: ubuntu-latest
    container: docker://hexpm/erlang:23.2.6-alpine-3.13.2
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Get elixir source code
      uses: actions/checkout@v2
      with:
        repository: ${{ github.event.inputs.repository || 'elixir-lang/elixir' }}
        ref:  ${{ github.event.inputs.ref || 'master' }}
        path: elixir

    - name: Install make
      run: apk add --no-cache make
    
    - name: Compile elixir
      run: |
        cd elixir
        make compile
        cd ../

    - name: Handle dialyzer PLT file caching
      id: cache-plt
      uses: actions/cache@v1
      with:
        path: plt-dir
        key: v1-erlang:23.2.6-alpine-3.13.2

    - name: Create the dialyzer PLT file
      if: steps.cache-plt.outputs.cache-hit != 'true'
      run: dialyzer --output_plt plt-dir/otp.plt --build_plt --apps erts kernel stdlib compiler syntax_tools parsetools tools ssl inets crypto runtime_tools ftp tftp mnesia public_key asn1 sasl

    - name: Run dialyzer
      run: elixir/bin/elixir dialyze.exs

    - name: Save the report
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: report
        path: report
